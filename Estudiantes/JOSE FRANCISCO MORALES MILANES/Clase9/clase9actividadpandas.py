# -*- coding: utf-8 -*-
"""Clase9ActividadPandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15BppfksYJAOQdSMHc-eDFcLGVB2GloMH

# Ejemplo de clase 9 pandas, lectura de html
## Autor : José Francisco Morales Milanes
### compartir con : ajmena92@gmail.com como comentarista

Podemos extraer información directamente desde tablas en paginas web a partir de la Url..
Libreria pandas
> pip install pandas en google colab ya tiene pandas

puede importar un monton de cosas que puede consultar csv, excel, bases de datos sql, Apis.
le da esteroides a las listas y diccionarios en python

siempre le damos imprimir para ver que es lo que hay en
https://gee.bccr.fi.cr/IndicadoresEconomicos/Cuadros/frmConsultaTCVentanilla.aspx
"""

import pandas as pd
# importar datos del banco central
df = pd.read_html('https://gee.bccr.fi.cr/IndicadoresEconomicos/Cuadros/frmConsultaTCVentanilla.aspx',encoding="utf-8", decimal=",",thousands=".")
#ccodificacion utf-8 permite caracteres especiales en español
#decimales y miles

#obtener informacionn general del data frame
df = df[2].copy() # copia el indice 2 de la lista se itera como un data frame buscamos la tabla que nos interesa
df.info()
print("\n----------dimensiones de df detakkada---------")
print(df.shape)

df.head()
#print(df)

"""#Limpiamos los datos del data frame para procesar los datos"""

# para rellenar nulos
# tail muestra las ultimas 5 finals
df[0].fillna('NO VALOR') #.tail()

# ELIMINAR LOS NULOS
df.dropna() # elimina fila con datos nulaos que no tenia que eliminar permite visulizar los datos sin valores nulos

# df  reemplaza valores nulos NaN con el último valor en la columna
# inplace = True es para indicar al interprete que lo aplique al dataframe en memoria le da un mensaje de advertencia pero todo bien lo aplica en memoria
df[0].ffill(inplace=True) #para rellenar nulos

# extraer la primera fila para asignarla como encabezados de columna en el data frame
primera_fila = df.iloc[0] # indice location

#primera_fila
# indicar a pandas que la primera fila es el encabezado  de las columnas
df.columns = primera_fila
#df.head()
df.drop(0, inplace=True) # elimina la primera fila del dataframe
df.head()

#Renombrar los nombres de las columnas
df.rename(columns = {
    'Tipo de Entidad': 'Tipo',
    'Entidad Autorizada': 'Entidad',
    'Diferencial Cambiario':'Diferencial'
}, inplace = True)
df.head()

"""#SELECCIONAR FILAS"""



df.dropna(inplace=True)

#Seleccionas filas por índice utilizando iloc
df.iloc[0:6]

"""SELECCIONAR FILAS"""

#SELECCIONAR FILAS DEL DATA FRAME
df[0:5]

# seleccionar filas directamente
df[0:5]

"""# Como seleccionar columnas"""

# imprimir las primeras 5 filas con las primeras tres columnas
df.iloc[:5, :3]

# imprime por el nombre de las columnas
df.loc[:5,['Entidad','Compra','Venta']]

"""# CAMBIAR EL TIPO DE COLUMNAS"""

#PRIMER PROCESO
#TRABAJAR EN EL TIPADO DE LAS COLUMNAS         --------------OJO PENDIENTE-----------------------
#Crear una lista con las Columnas con valores numérico

columnas_numericas = ['Compra', 'Venta','Diferencial']

# reemplazamos las de texto por las numericas
df[columnas_numericas] = df[columnas_numericas].apply(pd.to_numeric, errors='coerce')
#Convertir columna Tipo fecha
df['Última Actualización'] = df['Última Actualización'].apply(pd.to_datetime, errors='coerce')

#Convertir columna Tipo fecha
df['Última Actualización'] = df['Última Actualización'].apply(pd.to_datetime,dayfirst=True, errors='coerce')

df.info()

"""# **Calcular datos**


"""

# Consulta para kevin compra 100 $ donde sale mas rentable la venta
tipo_cambio_minimo = df['Venta'].min()

lista_entidades = df[df['Venta'] == tipo_cambio_minimo]['Entidad'].to_list()

lista_entidades = df.loc[df['Venta'] == tipo_cambio_minimo, 'Entidad'].to_list()
print('Tipo de cambio mínimo es :', tipo_cambio_minimo)
print('Entidades con tipo de camvio mínimo :', *lista_entidades)

#Donde Abigail, desea cambiar $15,000 a  colones. Donde es mas rentable el cambio de moneda ?
tipo_compra_maximo = df['Compra'].max()


lista_entidades = df.loc[df['Compra'] == tipo_compra_maximo,'Entidad'].to_list()


print('Hola Abigail, el cambio máximo favorables es:', tipo_compra_maximo)
print(f'Entidades con tipo de cambio máximo : {lista_entidades}')
print('El cambi de los $15mil a colones es:', (15000 * tipo_compra_maximo))



#Promedio de Venta y Compra
promedio_venta = df['Venta'].mean()
promedio_compra = df['Compra'].mean()


print('El promedio de Venta es:', promedio_venta)
print('El promedio de Compra es:', promedio_compra)

# se puede cargar a excel json list
promedio_venta_por_tipo = df.groupby('Tipo')['Venta'].mean().to_list()
promedio_compra_por_tipo = df.groupby('Tipo')['Compra'].mean().to_json()

print("*****")
print('El promedio de Venta por tipo es:', promedio_venta_por_tipo)
print("*****")
print('El promedio de Compra por tipo es:', promedio_compra_por_tipo)

#Analisis completo de un Data Frame de Pandas
df.groupby('Tipo')['Venta'].describe()

import matplotlib.pyplot as plt


minimo = df['Venta'].min()
maximo = df['Venta'].max()


#Graficar el tipo de cambio venta por tipo de entidad financiera
df.groupby('Tipo')['Venta'].mean().plot(kind='bar')
plt.title('Tipo de Cambio por Tipo de Entidad')
plt.xlabel('Tipo de Entidad')
plt.ylabel('Tipo de Cambio')


plt.ylim(minimo,maximo)
plt.show()



df

